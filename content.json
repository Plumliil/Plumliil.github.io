{"pages":[{"title":"初衷","text":"分享笔记 分享心得 记录问题 记录生活 一起学习","link":"/about/index.html"},{"title":"tags","text":"","link":"/tags/index.html"},{"title":"","text":"","link":"/guestbook/index.html"},{"title":"categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"引","text":"学习不能朝三暮四","link":"/%5Bobject%20Object%5D/hello-world/"},{"title":"express跨域","text":"express搭建服务器跨域问题解决方案:设置请求头为&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot; 具体代码 12345678910app.all('*', function(req, res, next) { res.header(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;); res.header(&quot;Access-Control-Allow-Headers&quot;, &quot;X-Requested-With,Content-Type&quot;); res.header(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;); res.header(&quot;Access-Control-Allow-Methods&quot;,&quot;PUT,POST,GET,DELETE,OPTIONS&quot;); res.header(&quot;X-Powered-By&quot;,' Express 4.17.1'); res.header(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;); next(); });app.use('/api',Router) 记住:解决跨域问题的这个代码必须放在Api调用的前边,否则跨域代码不起作用","link":"/%5Bobject%20Object%5D/express%E8%B7%A8%E5%9F%9F/"},{"title":"递归给我整麻了","text":"今天leetcode上整了两道链表题都用到了递归思想 1.[*21. 合并两个有序链表*](21. 合并两个有序链表 - 力扣（LeetCode） (leetcode-cn.com))将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 1234567891011var mergeTwoLists = function (list1, list2) { if (list1 === null) return list2; if (list2 === null) return list1; if (list1.val &lt; list2.val) { list1.next = mergeTwoLists(list1.next, list2); return list1 } else { list2.next = mergeTwoLists(list1, list2.next); return list2 }}; if (list1 === null) return list2; if (list2 === null) return list1; 这两行代码既可以判断首先传入的值也可以结束递归 list1.next = mergeTwoLists(list1.next, list2); 从第一次函数调用开始,当list1链表val小于list2链表的val时,list1这一个节点就是头节点,然后看list1.next,这里list.next作为新的链表传入mergeTowList函数继续判断,一层一层递归下去,直到满足结束递归的条件,开始返回,并且此时开始返回的是一层一层的next,最后形成一个新的链表. 2.[*24. 两两交换链表中的节点*](24. 两两交换链表中的节点 - 力扣（LeetCode） (leetcode-cn.com))","link":"/%5Bobject%20Object%5D/%E9%80%92%E5%BD%92%E7%BB%99%E6%88%91%E6%95%B4%E9%BA%BB%E4%BA%86/"},{"title":"手写call&apply&bind","text":"主要思想：给对象一个临时函数来调用,调用完毕后删除该临时函数对应的属性call函数封装 123456789function pliCall(fn, obj, ...args) { if (obj === undefined || obj === null) { obj = globalThis } obj.temp = fn let result = obj.temp(...args) delete obj.temp return result} apply函数 123456789function pliApply(fn, obj, args) { if (obj === undefined || obj === null) { obj = globalThis } obj.temp = fn; let result = obj.temp(...args) delete obj.temp return result} bind函数 1234567891011function pliBind(fn, obj, ...args) { return function (...args2) { if (obj === undefined || obj === null) { obj = globalThis } obj.temp = fn; let result = obj.temp(...args, ...args2) delete obj.temp; return result }}","link":"/%5Bobject%20Object%5D/%E6%89%8B%E5%86%99call-apply-bind/"},{"title":"call，apply，bind的简单用法","text":"简单了解一下call，apply以及bind的用法首先说一下三者的共同之处call、apply、bind作用是改变函数执行时的上下文，简单地说就是改变函数运行时的this指向，当我们函数中所需要的this指向不是当前的this时可以用这三种方法来改变this指向 其次来介绍一下这三种方法并说明这三种方法的作用call()call(绑定给this的值，，第一个参数，第二个参数) call(this，agr1，arg2) 注意：call（）的传参，每个参数中间用 ,来分割 12345678910111213141516let obj1 = { name: 'obj1Name', setAge: function (age) { this.age = age }}let obj2 = { name: 'obj2Name'}obj1.setAge(18);console.log(obj1); // {&quot;name&quot;:&quot;obj1Name&quot;,&quot;age&quot;:18}// obj2.setAge(19); // obj2.setAge is not a functionconsole.log(obj2);obj1.setAge.call(obj2, 20);console.log(obj2); // {&quot;name&quot;:&quot;obj2Name&quot;,&quot;age&quot;:20} obj2对象中没有setAge函数当需要用到setAge函数时可以通过call()改变obj1中setAge函数this的指向并传递参数，指向obj2，来给obj2设置age。 apply()apply(绑定给this的值,[arg1,arg2]) apply(this，[agr1，arg2]) 12345678910111213141516let obj1 = { name: 'obj1Name', setAge: function (age) { this.age = age }}let obj2 = { name: 'obj2Name'}obj1.setAge(18);console.log(obj1); // {&quot;name&quot;:&quot;obj1Name&quot;,&quot;age&quot;:18}// obj2.setAge(19); // obj2.setAge is not a functionconsole.log(obj2);obj1.setAge.apply(obj2, [20]);console.log(obj2); // {&quot;name&quot;:&quot;obj2Name&quot;,&quot;age&quot;:20} apply()和call()的用法相似，唯一的不同点就是使用apply()方法传参时需要把参数传入数组中 bind()bind(绑定给this的值,arg1,arg2)(arg3) bind(this，agr1，arg2)(arg3)和call()很相似，第一个参数是this的指向，从第二个参数开始是接收的参数列表。区别在于bind方法返回值是函数以及bind接收的参数列表的使用。 12345function fn(a, b) { return this.f+a+b}console.log(fn.bind({f:2})(1,1)); // 4console.log(fn.bind({f:2},2)(1)); // 5 call(),apply(),bind()三种方法的区别bind()返回对应函数, 便于稍后调用； apply(), call()则是立即调用。 需要注意的时箭头函数的this指向，箭头函数内的this的指向指的是箭头函数所在对象中的this","link":"/%5Bobject%20Object%5D/call%EF%BC%8Capply%EF%BC%8Cbind%E7%9A%84%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95/"},{"title":"浅拷贝与深拷贝","text":"在了解深浅拷贝前需要首先先谈谈拷贝的概念 拷贝拷贝就是拷贝指向对象的指针，意思就是说：拷贝出来的目标对象的指针和源对象的指针指向的内存空间是同一块空间， 浅拷贝浅拷贝是按位拷贝对象，它会创建一个新对象，这个对象有着原始对象属性值的一份精确拷贝。如果属性是基本类型，拷贝的就是基本类型的值；如果属性是内存地址（引用类型），拷贝的就是内存地址。 深拷贝深拷贝，在拷贝引用类型成员变量时，为引用类型的数据成员另辟了一个独立的内存空间，实现真正内容上的拷贝。 浅拷贝的四种方式 1.键值拷贝123456let pl={name:'plumli'};let plum={name:pl.name};console.log(plum); // {&quot;name&quot;:&quot;plumli&quot;}plum.name='plum';console.log(pl); // {&quot;name&quot;:&quot;plumli&quot;}console.log(plum); // {&quot;name&quot;:&quot;plum&quot;} 2.for循环拷贝12345678let pl = { name: 'lyh', url: 'plumli.xyz' };let obj = {};for (const key in pl) { obj[key] = pl[key]}obj.name = 'plumli'; console.log(obj); // {&quot;name&quot;:&quot;plumli&quot;,&quot;url&quot;:&quot;plumli.xyz&quot;}console.log(pl); // {&quot;name&quot;:&quot;lyh&quot;,&quot;url&quot;:&quot;plumli.xyz&quot;} 3.assign方法拷贝12345let pl = { name: 'lyh', url: 'plumli.xyz' };let obj = Object.assign({}, pl)obj.name = 'plumli';console.log(pl); // {&quot;name&quot;:&quot;lyh&quot;,&quot;url&quot;:&quot;plumli.xyz&quot;}console.log(obj); // {&quot;name&quot;:&quot;plumli&quot;,&quot;url&quot;:&quot;plumli.xyz&quot;} 4.解构方法拷贝1234let pl = { name: 'lyh', url: 'plumli.xyz' };let obj = { ...pl };console.log(obj); // {&quot;name&quot;:&quot;lyh&quot;,&quot;url&quot;:&quot;plumli.xyz&quot;} 深拷贝方法当拷贝的对象里面又有新的对象时，此时进行普通方法的拷贝只是拷贝到了新的对象的内存地址，当拷贝的对象内的对象值发生变化时，新拷贝的对象值也会发生变化。此时就需要进行深拷贝。 深拷贝中对象和数组类型本质上都是对象数据类型，如果经过普通深拷贝后对象里数组的数组方法可能不可用，下边先来介绍一下简单版的深拷贝。 简单版1234567891011121314151617181920212223242526272829303132333435let obj1 = { name: 'obj1name', age: 18, hobbies: { one: 'eat', two: 'sleep' }}function copy(object) { let res = {}; for (const key in object) { res[key] = typeof object[key] === 'object' ? copy(object[key]) : object[key] } return res}let obj2 = copy(obj1);obj2.hobbies.three = 'play'; // 如果 改变obj2内对象的值，obj1内对象的值不变，即为拷贝成功console.log('obj1', JSON.stringify(obj1, null, 2));// obj1 {// &quot;name&quot;: &quot;obj1name&quot;,// &quot;age&quot;: 18,// &quot;hobbies&quot;: {// &quot;one&quot;: &quot;eat&quot;,// &quot;two&quot;: &quot;sleep&quot;// }console.log('obj2', JSON.stringify(obj2, null, 2));// obj2 {// &quot;name&quot;: &quot;obj1name&quot;,// &quot;age&quot;: 18,// &quot;hobbies&quot;: {// &quot;one&quot;: &quot;eat&quot;,// &quot;two&quot;: &quot;sleep&quot;,// &quot;three&quot;: &quot;play&quot;// }// } 简单般的深拷贝方法无法拷贝数组对象，现在来看升级版 升级版介绍：Object.entries() 方法返回一个给定对象自身可枚举属性的键值对数组，其排列与使用 for…in 循环遍历该对象时返回的顺序一致（区别在于 for-in 循环也枚举原型链中的属性）。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647let obj1 = { name: 'obj1name', age: 18, hobbies: { one: 'eat', two: 'sleep' }, lessons: ['javascript', 'css']}function copy(object) { let res = object instanceof Array ? [] : {}; for (const [k, v] of Object.entries(object)) { res[k] = typeof v === 'object' ? copy(v) : v } return res}let obj2 = copy(obj1);obj2.hobbies.three = 'play';obj2.lessons.push('html');console.log('obj1', JSON.stringify(obj1, null, 2));// obj1 {// &quot;name&quot;: &quot;obj1name&quot;,// &quot;age&quot;: 18,// &quot;hobbies&quot;: {// &quot;one&quot;: &quot;eat&quot;,// &quot;two&quot;: &quot;sleep&quot;// },// &quot;lessons&quot;: [// &quot;javascript&quot;,// &quot;css&quot;// ]// }console.log('obj2', JSON.stringify(obj2, null, 2));// obj2 {// &quot;name&quot;: &quot;obj1name&quot;,// &quot;age&quot;: 18,// &quot;hobbies&quot;: {// &quot;one&quot;: &quot;eat&quot;,// &quot;two&quot;: &quot;sleep&quot;,// &quot;three&quot;: &quot;play&quot;// },// &quot;lessons&quot;: [// &quot;javascript&quot;,// &quot;css&quot;,// &quot;html&quot;// ]// } 以上为本阶段学习拷贝的一点理解，以后若接触到更多会逐步添加…","link":"/%5Bobject%20Object%5D/%E6%B5%85%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B7%B1%E6%8B%B7%E8%B4%9D/"},{"title":"Js判断浏览器进度条是否到底部","text":"判断浏览器滚动条是否到达浏览器底部在判断前是需要了解几个关键词 滚动条到顶部的距离 scrollTop 当前窗口内容的可视区 windowHeight 滚动条内容的总高度 scrollHeight 判断到底部的等式是：scrollTop+windowHeight=scrollHeight 具体代码如下： 123456789101112131415161718window.onscroll = function () { //变量scrollTop是滚动条滚动时，距离顶部的距离 var scrollTop = document.documentElement.scrollTop || document.body.scrollTop; //变量windowHeight是可视区的高度 var windowHeight = document.documentElement.clientHeight || document.body.clientHeight; //变量scrollHeight是滚动条的总高度 var scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight; //滚动条到底部的条件 if (scrollTop + windowHeight == scrollHeight) { //写后台加载数据的函数 console.log( &quot;距顶部&quot; scrollTop +&quot;可视区高度&quot; +windowHeight +&quot;滚动条总高度&quot; +scrollHeight ); } };","link":"/%5Bobject%20Object%5D/Js%E5%88%A4%E6%96%AD%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%98%AF%E5%90%A6%E5%88%B0%E5%BA%95%E9%83%A8/"},{"title":"JsQuestions-2_定时器","text":"1234567// 发生什么？let config = { alert: setInterval(()=&gt;{ console.log('Alert!') }，1000)}config = null A：setInterval 的回调不会被调用 B：setInterval 的回调会被调用一次 C：setInterval 的回调会被每秒钟调用 D：我们从没调用过config.alert()，config为null 解析：答案：C一般情况下当我们将对象赋值为null，那些对象会被进行垃圾回收（garbage collected）因为已经没有对这些对象的引用了，然而，setInterval的参数是一个箭头函数（所以上下文绑定到对象config了），回调函数仍然保留着对config的引用，只要存在引用，对象就不会被垃圾回收，因为没有被垃圾回收，setInterval的回调每1000ms会被调用一次","link":"/%5Bobject%20Object%5D/JsQuestions-2-%E5%AE%9A%E6%97%B6%E5%99%A8/"},{"title":"对象按照某一属性排序","text":"使对象按照某个顺序排序当前属性值相同时按照另一个属性排序1234567891011121314let obj=[ {name:'zhangsan',age:20,score:89}, {name:'zhaoli',age:20,score:90}, {name:'lisi',age:21,score:86}, {name:'wangwu',age:23,score:95},]function rank(attr1,attr2) { return function (a,b) { if (a[attr1]==b[attr1]) return a[attr2]-b[attr2]; return a[attr1]-b[attr1]; }}obj.sort(rank('age'));console.log(obj.sort(rank('age','score')));","link":"/%5Bobject%20Object%5D/%E5%AF%B9%E8%B1%A1%E6%8C%89%E7%85%A7%E6%9F%90%E4%B8%80%E5%B1%9E%E6%80%A7%E6%8E%92%E5%BA%8F/"},{"title":"vue报错解决Duplicate keys detected:[object Object]","text":"​ 最近在做vue项目时遇到了报错 ​ Duplicate keys detected: ‘[object Object]’. This may cause an update error. ​ 由于这个问题是第一次遇见，所以在解决起来废了点时间 ​ ![1](E:\\Blog_Github\\Plumliil\\source_posts\\vue报错解决Duplicate keys detected[object Object]\\1.png) 解决：在遍历数组时 :key书写错误， ​ 我的错误写法 1234567&lt;ul&gt; &lt;li v-for=&quot;v in caseintrocon&quot; :key=&quot;i&quot;&gt; &lt;p&gt;&lt;em&gt;{{v.data_m_d}}&lt;/em&gt;{{v.data_y}}&lt;/p&gt; &lt;p&gt;&lt;strong&gt;{{v.title}}&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;{{v.text_con}}&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; 改正后的写法： ​ 1234567&lt;ul&gt; &lt;li v-for=&quot;(v,i) in caseintrocon&quot; :key=&quot;i&quot;&gt; &lt;p&gt;&lt;em&gt;{{v.data_m_d}}&lt;/em&gt;{{v.data_y}}&lt;/p&gt; &lt;p&gt;&lt;strong&gt;{{v.title}}&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;{{v.text_con}}&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; 总结：平时用修改前的方式写代码也没有出错，这次代码出错给了我个提醒，以后书写代码要更加规范","link":"/%5Bobject%20Object%5D/vue%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3Duplicate-keys-detected-object-Object/"},{"title":"class小知识","text":"vue动态绑定类名使用 :class=”[‘xxx’,’xxxx’ ]”,其中xxxx可以使用三元表达式来选择是否启用该类名","link":"/%5Bobject%20Object%5D/class%E5%B0%8F%E7%9F%A5%E8%AF%86/"},{"title":"认识Ajax","text":"Ajax应用场景1.页面上拉加载更多数据2.列表数据无刷新分页3.表单项离开焦点数据验证4.搜索框提示文字下拉列表Ajax运行环境Ajax技术需要运行在网站环境下才会生效，可用Node创建的服务器作为网站服务器Ajax运行原理普通浏览器端——-请求——-&gt;服务器端 浏览器端&lt;——响应——-服务器端 ​ 开发人员不可控 ajax浏览器端——– 创建——-&gt;Ajax——-请求——-&gt;服务器端 浏览器端&lt;——– 响应——Ajax&lt;——-响应——-服务器端 ​ 开发人员可控 ajax相当于浏览器发送请求与接收响应的代理人，以实现不影响用户浏览页面的情况下局部更新页面数据，从而提高用户体验 Ajax实现步骤(需重启服务器)1.创建Ajax对象var xhr=new XMLHttpPequest() 创建ajax对象httprequest使用http请求，返回xml文件 现在在ajax请求中一般服务器端一般返回json数据 2.告诉Ajax请求地址及请求方式xhr.open('get','http://www.example.com'); open方法，第一个参数为请求方式，第二个参数是请求地址 3.发送请求xhr.send() 4.获取服务器端给与客户端的响应数据xhr.onload=function(){console.log(xhr.requestseText);} 服务器端响应的数据格式在真实的项目中，服务器端大部分情况下会以json对象作为响应数据的格式，当客户端拿到数据时，要将json数据和html字符串进行拼接，然后将拼接的结果展示在页面上在http请求与响应的过程中，无论是请求参数还是相应内容，如果是对象类型，最终都会被转化成对象字符串进行传输JSON.parse()// 将字符串转化为json对象 请求参数传递传统网站表单提交1234&lt;form method=&quot;get&quot; action=&quot;http://www.example.com&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/form&gt; Get请求方式xhr.open('get','http://www.example.com'); Post请求方式xhr.setRequestHeader('Content-Type','applicate/x-www-form-urlencoded') xhr.send('name=zhangsan&amp;age=20') 请求报文在HTTP请求和响应的过程中传递的数据就是叫报文，包括要传送的数据和一些附加信息，这些数据和信息要遵循规定好的格式 客户端发送请求报文，请求方式和请求地址，服务器进行响应 请求参数的格式1.application/x-www-form-urlencodedname=zhangsan&amp;sex=男 2.application/json{name:'zhangsan',age:'20',sex:'男'} 在请求头中指定Content-type属性的值是application/json,告诉服务器当前请求参数的格式是jsonJSON.stringify()//将json对象转化为json字符串 Get请求是不能提交json对象数据格式的，传统网站的表单提交也是不支持json对象数据格式的获取服务器端响应Ajax状态码在创建ajax对象，配置ajax对象，发送请求，一级接收完服务器端响应数据，这个过程中的每一步骤都会对应一个数值，这个数值就是ajax状态码。 0：请求未初始化（还没有调用open） 1：请求已经建立，但是还没有发送（还没有调用send） 2：请求已发送 3：请求正在处理中，通常响应中已经有部分数据可以用了 4：响应已完成，可以获取并使用服务器的响应 xhr.readyState // 获取ajax状态码 获取服务器端的响应onreadystatechange事件 当Ajax状态码发生变化时将自动触发该事件 区别描述 onload事件 onreadystatuschange事件 是否兼容IE低版本 不兼容 兼容 是否需要判断Ajax状态码 不需要 需要 被调用次数 一次 多次 Ajax错误处理1.网络畅通，服务器端能接收到请求，服务器端返回的结果不是预期的结果可判断服务器返回的状态码，粉别进行处理。xhr.status获取http状态码 2.网络畅通，服务器端没有收到请求，返回404状态码检查请求地址是否错误 3.网络通常，服务器能收到请求，服务器端返回500状态码4.网络中断，请求无法发送到服务器会触发xhr对象下面的onerror事件，再onerror事件处理函数中对错误进行处理 状态码区分Ajax状态码：表示Ajax请求的过程状态 ajax对象返回HTTP状态码：表示请求的处理结果 是服务器端返回的低版本IE浏览器的缓存问题在低版本的IE浏览器中，Ajax请求有严重的缓存问题，即在请求地址不会发生变化的情况下，只有第一次请求会真正的发送到服务器端，后续的请求会从浏览器的缓存中获取结果，即使服务器端数据更新了，客户端还是拿到的是缓存中的旧数据解决方案：在请求地址后面加请求参数，保证每一次请求中的请求参数的值不同xhr.open('get','http://www.example.com?t='+Math.random()) 同步异步概述同步：一个人同一时间只能做同一件事情，只有一件事情做完后，才能做另外一件事情console.log('before')console.log('after')异步：一个人一件事情做了一半，转而去做另一件事情，当其他事情做完后，再回过头来继续做之前未完成的事情异步代码虽然需要花时间去执行，但是程序不会等待异步代码执行后再继续执行后续代码，而是直接执行后续代码，当后续代码执行完后再回头看异步代码是否返回结果，如果已有返回结果，再调用事先准备好的回调函数处理异步代码执行结果console.log('before'); setTimeout(()=&gt;{console.log('last)},2000) console.log('after'); Ajax封装问题：发送一次请求代码过多，发送请求代码冗余重复解决方案：将请求代码封装到函数中，发请求是调用函数即可。请求参数要考虑的问题：1.请求参数位置的问题将请求参数传递到ajax内部，在函数内部根据请求方式的不同请求参数放置在不同的位置get 放在请求地址的后面post 放在send方法中2.请求参数的格式问题application/x-www-form-urlencoded参数名称=参数值&amp;参数名称==参数值application/json{name:'zhangsan',age:20}传递对象数据类型对于函数调用者更加友好在函数内部对象数据类型转换为字符串","link":"/%5Bobject%20Object%5D/%E8%AE%A4%E8%AF%86Ajax/"},{"title":"Ajax函数封装","text":"12345678910ajax({ url:'http://localhost:3000/xxx', data:{ name:'zhangsan', age:20 }, success:function (data){ console.log(data) }}) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566function ajax(options){ // 存储默认值 var defaults={ type: 'get', url:'', data:{}, header:{ 'Content-Type':'application/x-www-form-urlencoded' }, success:function (){}, error:function (){} } // 使用options对象中的属性覆盖defaults中的属性 Object.assign(defaults,options) // 创建ajax对象 var xhr=new XMLHttpRequest(); // 拼接请求参数的对象 var params=''; // 循环用户传递过来的对象格式参数 for(var attr in defaults.data){ params+=attr+'='+defaults.data[attr]+'&amp;'; } &lt;!--more--&gt; // 参数后边的&amp;截取掉 params=params.substr(0,params.length-1); // 判断请求方式 if(defaults.type=='get'){ defaults.url=defaults.url+'?'+params; } // 配置ajax对象 xhr.open(defaults.type,defaults.url) if(defaults.type=='post'){ var contentType=defaults.header['Content-Type']; xhr.setRequestHeader('Content-Type',contentType); // 判断用户希望的请求参数格式类型 // 如果类型为json if(contentType=='application/json'){ // 传递json类型的参数 xhr.send(JSON.stringify(defaults.data)) }else{ // 传递普通类型的参数 xhr.send(params); } }else{ xhr.send(); } xhr.onload=()=&gt;{ // xhr.getResponseHeader(); // 获取响应头数据 var contentType=xhr.getResponseHeader('Content-Type'); var responseText=xhr.responseText; // 如果响应中包含application/json if(contentType.includes('application/json')){ // json字符串转化为json对象 responseText=JSON.parse(responseText); } // 当http状态码等于200时 if (xhr.status==200){ // 请求成功 defaults.success(responseText,xhr); }else { // 请求失败 defaults.error(responseText,xhr); } }}","link":"/%5Bobject%20Object%5D/Ajax%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/"},{"title":"Vue学习之认识/deep/","text":"elementui使用中deep的用法/deep/ 在做第一个vue项目时遇到了一个问题，在使用elementui中的Drawer（抽屉组件时），想要修改Drawer的标题，尝试着修改title的样式，但没有效果，尝试了很多方法，最后用/deep/解决了问题通过深度选择 .el-drawer 中的title即可修改标题样式成功 123/deep/ .el-drawer__header{ color: white;} 在此之后可以用/deep/来修改elementui中一些其他组件的样式","link":"/%5Bobject%20Object%5D/Vue%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%AE%A4%E8%AF%86deep/"},{"title":"Vue学习之认识ref","text":"ref相当于一个dom节点，值为string 通俗将类似于原生js的document.querySelector(‘xxx’)；但是不同的是vue是操纵虚拟dom，在渲染初期并没有这个属性，而是在创建vue实例后才加到虚拟dom中。 其中ref有以下几种常见用法： 本页面获取dom元素 12&lt;div ref=&quot;divmsg&quot;&gt;divmsg&lt;/div&gt;&lt;button @click=&quot;getmsg&quot;&gt;div内元素&lt;/button&gt; 1234getmsg(){ console.log(this.$ref.divmsg)}// 输出11111 获取子组件中的data 子组件 1234567&lt;div&gt;{{msg}}&lt;/div&gt;------------------data(){ return{ msg:'hello world！' }} 父组件 123456789101112 &lt;div id=&quot;app&quot;&gt; &lt;Child ref=&quot;child&quot;&gt;&lt;/Child&gt; &lt;button @click=&quot;getChild&quot;&gt;获取子组件中值&lt;/button&gt; &lt;/div&gt;---------------------------------import xxx from xxxmethods:{ getchild(){ console.log(this.$ref.child.msg); }}// 输出：hello world! 调用子组件中方法 子组件 1234567&lt;div&gt;&lt;/div&gt;----------------------methods:{ childMethod(){ console.log('childMethod'); }} 父组件 123456789101112 &lt;div id=&quot;app&quot;&gt; &lt;Child ref=&quot;child&quot;&gt;&lt;/Child&gt; &lt;button @click=&quot;getChild&quot;&gt;调用子组件方法&lt;/button&gt; &lt;/div&gt;---------------------------------import xxx from xxxmethods:{ getchild(){ console.log(this.$ref.child.childMethod()); }}// 输出：hello world! 其中$ref是一个对象，存放已注册过ref的所有子组件 通过vue实例.$refs.属性名即可获取标记的元素 如果ref重名后面的会把前面的覆盖 其中若元素使用v-for则返回dom节点数组","link":"/%5Bobject%20Object%5D/Vue%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%AE%A4%E8%AF%86ref/"},{"title":"Vue中v-on事件总结","text":"资源事件 事件名称 何时触发 error 资源加载失败时。 abort 正在加载资源已经被中止时。 load 资源及其相关资源已完成加载。 beforeunload window，document 及其资源即将被卸载。 unload 文档或一个依赖资源正在被卸载。 网络事件 事件名称 何时触发 online 浏览器已获得网络访问。 offline 浏览器已失去网络访问。 焦点事件 事件名称 何时触发 focus 元素获得焦点（不会冒泡）。 blur 元素失去焦点（不会冒泡）。 WebSocket 事件 事件名称 何时触发 open WebSocket 连接已建立。 message 通过 WebSocket 接收到一条消息。 error WebSocket 连接异常被关闭（比如有些数据无法发送）。 close WebSocket 连接已关闭。 会话历史事件 事件名称 何时触发 pagehide A session history entry is being traversed from. pageshow A session history entry is being traversed to. popstate A session history entry is being navigated to (in certain cases). CSS 动画事件 事件名称 何时触发 animationstart 某个 CSS 动画开始时触发。 animationend 某个 CSS 动画完成时触发。 animationiteration 某个 CSS 动画完成后重新开始时触发。 CSS 过渡事件 事件名称 何时触发 transitionstart A CSS transition has actually started (fired after any delay). transitioncancel A CSS transition has been cancelled. transitionend A CSS transition has completed. transitionrun A CSS transition has begun running (fired before any delay starts). 表单事件 事件名称 何时触发 reset 点击重置按钮时 submit 点击提交按钮 打印事件 时间名称 何时触发 beforeprint 打印机已经就绪时触发 afterprint 打印机关闭时触发 文本写作事件 Event Name Fired When compositionstart The composition of a passage of text is prepared (similar to keydown for a keyboard input, but works with other inputs such as speech recognition). compositionupdate A character is added to a passage of text being composed. compositionend The composition of a passage of text has been completed or canceled. 视图事件 Event Name Fired When fullscreenchange An element was turned to fullscreen mode or back to normal mode. fullscreenerror It was impossible to switch to fullscreen mode for technical reasons or because the permission was denied. resize The document view has been resized. scroll The document view or an element has been scrolled. 剪贴板事件 Event Name Fired When cut 已经剪贴选中的文本内容并且复制到了剪贴板。 copy 已经把选中的文本内容复制到了剪贴板。 paste 从剪贴板复制的文本内容被粘贴。 键盘事件 Event Name Fired When keydown 按下任意按键。 keypress 除 Shift、Fn、CapsLock 外的任意键被按住。（连续触发。） keyup 释放任意按键。 鼠标事件 Event Name Fired When auxclick A pointing device button (ANY non-primary button) has been pressed and released on an element. click 在元素上按下并释放任意鼠标按键。 contextmenu 右键点击（在右键菜单显示前触发）。 dblclick 在元素上双击鼠标按钮。 mousedown 在元素上按下任意鼠标按钮。 mouseenter 指针移到有事件监听的元素内。 mouseleave 指针移出元素范围外（不冒泡）。 mousemove 指针在元素内移动时持续触发。 mouseover 指针移到有事件监听的元素或者它的子元素内。 mouseout 指针移出元素，或者移到它的子元素上。 mouseup 在元素上释放任意鼠标按键。 pointerlockchange 鼠标被锁定或者解除锁定发生时。 pointerlockerror 可能因为一些技术的原因鼠标锁定被禁止时。 select 有文本被选中。 wheel 滚轮向任意方向滚动。 拖放事件 Event Name Fired When drag 正在拖动元素或文本选区（在此过程中持续触发，每 350ms 触发一次） dragend 拖放操作结束。（松开鼠标按钮或按下 Esc 键） dragenter 被拖动的元素或文本选区移入有效释放目标区 dragstart 用户开始拖动HTML元素或选中的文本 dragleave 被拖动的元素或文本选区移出有效释放目标区 dragover 被拖动的元素或文本选区正在有效释放目标上被拖动 （在此过程中持续触发，每350ms触发一次） drop 元素在有效释放目标区上释放 媒体事件 Event Name Fired When audioprocess The input buffer of a ScriptProcessorNode is ready to be processed. canplay The browser can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content. canplaythrough The browser estimates it can play the media up to its end without stopping for content buffering. complete The rendering of an OfflineAudioContext is terminated. durationchange The duration attribute has been updated. emptied The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it. ended Playback has stopped because the end of the media was reached. loadeddata The first frame of the media has finished loading. loadedmetadata The metadata has been loaded. pause Playback has been paused. play Playback has begun. playing Playback is ready to start after having been paused or delayed due to lack of data. ratechange The playback rate has changed. seeked A seek operation completed. seeking A seek operation began. stalled The user agent is trying to fetch media data, but data is unexpectedly not forthcoming. suspend Media data loading has been suspended. timeupdate The time indicated by the currentTime attribute has been updated. volumechange The volume has changed. waiting Playback has stopped because of a temporary lack of data. 进度事件 Event Name Fired When abort Progression has been terminated (not due to an error). error Progression has failed. load Progression has been successful. loadend Progress has stopped (after “error”, “abort” or “load” have been dispatched). loadstart Progress has begun. progress In progress. timeout Progression is terminated due to preset time expiring. 存储事件12change` (see [Non-standard events](https://developer.mozilla.org/zh-CN/docs/Web/Events#Non-standard_events))`storage 更新事件123456checking``downloading``error``noupdate``obsolete``updateready 值变化事件1234567broadcast``CheckboxStateChange``hashchange``input``RadioStateChange``readystatechange``ValueChange 未分类的事件12345invalid``message``message``open``show 不常见和非标准事件Abortable Fetch events Event name Fired when abort A DOM request is aborted, i.e. using AbortController.abort(). WebVR events Event name Fired when vrdisplayactivate When a VR display is able to be presented to, for example if an HMD has been moved to bring it out of standby, or woken up by being put on. vrdisplayblur when presentation to a VRDisplay has been paused for some reason by the browser, OS, or VR hardware — for example, while the user is interacting with a system menu or browser, to prevent tracking or loss of experience. vrdisplayconnect when a compatible VRDisplay is connected to the computer. vrdisplaydeactivate When a VRDisplay can no longer be presented to, for example if an HMD has gone into standby or sleep mode due to a period of inactivity. vrdisplaydisconnect When a compatible VRDisplay is disconnected from the computer. vrdisplayfocus When presentation to a VRDisplay has resumed after being blurred. vrdisplaypresentchange The presenting state of a VRDisplay changes — i.e. goes from presenting to not presenting, or vice versa. SVG 事件1234567SVGAbort``SVGError``SVGLoad``SVGResize``SVGScroll``SVGUnload``SVGZoom 数据库事件1234567abort``blocked``complete``error``success``upgradeneeded``versionchange 脚本事件12afterscriptexecute``beforescriptexecute 菜单事件12DOMMenuItemActive``DOMMenuItemInactive 窗口事件1close 弹出事件1234popuphidden``popuphiding``popupshowing``popupshown Tab 事件1visibilitychange 电池事件1234chargingchange``chargingtimechange``dischargingtimechange``levelchange 呼叫事件123456789101112131415alerting``busy``callschanged``cfstatechange``connected``connecting``dialing``disconnected``disconnecting``error``held`, `holding``incoming``resuming``statechange``voicechange 传感器事件1234compassneedscalibration``devicemotion``deviceorientation``orientationchange 智能卡事件1234567icccardlockerror``iccinfochange``smartcard-insert``smartcard-remove``stkcommand``stksessionend``cardstatechange 短信和USSD事件1234delivered``received``sent``ussdreceived 帧事件1234567891011mozbrowserclose``mozbrowsercontextmenu``mozbrowsererror``mozbrowsericonchange``mozbrowserlocationchange``mozbrowserloadend``mozbrowserloadstart``mozbrowseropenwindow``mozbrowsersecuritychange``mozbrowsershowmodalprompt``mozbrowsertitlechange DOM变异事件12345678910DOMAttributeNameChanged``DOMAttrModified``DOMCharacterDataModified``DOMContentLoaded``DOMElementNameChanged``DOMNodeInserted``DOMNodeInsertedIntoDocument``DOMNodeRemoved``DOMNodeRemovedFromDocument``DOMSubtreeModified 触摸事件1234touchcancel``touchend``touchmove``touchstart 指针事件12345678910pointerover``pointerenter``pointerdown``pointermove``pointerup``pointercancel``pointerout``pointerleave``gotpointercapture``lostpointercapture 标准事件这些事件在官方Web规范中定义，并且应在各个浏览器中通用。 每个事件都和代表事件接收方的对象（由此您可以查到每个事件提供的数据），定义这个事件的标准或标准链接会一起列出。 事件名称 事件类型 规范 触发时机… abort UIEvent DOM L3 资源载入已被中止 abort ProgressEvent ProgressandXMLHttpRequest Progress被终止(不是error造成的) abort Event IndexedDB 事务已被中止 afterprint Event HTML5 相关文档已开始打印或打印预览已被关闭 animationcancel AnimationEvent CSS Animations A CSS animation has aborted. animationend AnimationEvent CSS Animations 完成一个CSS 动画 animationiteration AnimationEvent CSS Animations 重复播放一个CSS 动画 animationstart AnimationEvent CSS Animations 一个 CSS 动画已开始 appinstalled Event Web App Manifest A web application is successfully installed as a progressive web app. audioprocess AudioProcessingEvent Web Audio API audioprocess 一个ScriptProcessorNode 的输入缓冲区可处理 audioend Event Web Speech API 用户代理捕捉到用以语音识别的音频 audiostart Event Web Speech API 用户代理开始捕捉用以语音识别的音频 beforeprint Event HTML5 相关文档将要开始打印或准备打印预览 beforeunload BeforeUnloadEvent HTML5 即将卸载 window，document 及其资源 beginEvent TimeEvent SVG A SMIL animation element begins. blocked IndexedDB An open connection to a database is blocking a versionchange transaction on the same database. blur FocusEvent DOM L3 An element has lost focus (does not bubble). boundary SpeechSynthesisEvent Web Speech API The spoken utterance reaches a word or sentence boundary canplay Event HTML5 media The user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content. canplaythrough Event HTML5 media The user agent can play the media up to its end without having to stop for further buffering of content. change Event DOM L2, HTML5 The change event is fired for ``, ``, and `` elements when a change to the element’s value is committed by the user. chargingchange Event Battery status The battery begins or stops charging. chargingtimechange Event Battery status The chargingTime attribute has been updated. click MouseEvent DOM L3 A pointing device button has been pressed and released on an element. close Event WebSocket A WebSocket connection has been closed. complete IndexedDB A transaction successfully completed. complete OfflineAudioCompletionEvent Web Audio API OfflineAudioCompletionEvent The rendering of an OfflineAudioContext is terminated. compositionend CompositionEvent DOM L3 The composition of a passage of text has been completed or canceled. compositionstart CompositionEvent DOM L3 The composition of a passage of text is prepared (similar to keydown for a keyboard input, but works with other inputs such as speech recognition). compositionupdate CompositionEvent DOM L3 A character is added to a passage of text being composed. contextmenu MouseEvent HTML5 The right button of the mouse is clicked (before the context menu is displayed). copy ClipboardEvent Clipboard The text selection has been added to the clipboard. cut ClipboardEvent Clipboard The text selection has been removed from the document and added to the clipboard. dblclick MouseEvent DOM L3 A pointing device button is clicked twice on an element. devicechange Event Media Capture and Streams A media device such as a camera, microphone, or speaker is connected or removed from the system. devicemotion DeviceMotionEvent Device Orientation Events Fresh data is available from a motion sensor. deviceorientation DeviceOrientationEvent Device Orientation Events Fresh data is available from an orientation sensor. dischargingtimechange Event Battery status The dischargingTime attribute has been updated. DOMActivate UIEvent DOM L3 A button, link or state changing element is activated (use click instead). DOMAttributeNameChanged MutationNameEvent DOM L3 Removed The name of an attribute changed (use mutation observers instead). DOMAttrModified MutationEvent DOM L3 The value of an attribute has been modified (use mutation observers instead). DOMCharacterDataModified MutationEvent DOM L3 A text or another CharacterData has changed (use mutation observers instead). DOMContentLoaded Event HTML5 The document has finished loading (but not its dependent resources). DOMElementNameChanged MutationNameEvent DOM L3 Removed The name of an element changed (use mutation observers instead). DOMFocusIn FocusEvent DOM L3 An element has received focus (use focus or focusin instead). DOMFocusOut FocusEvent DOM L3 An element has lost focus (use blur or focusout instead). DOMNodeInserted MutationEvent DOM L3 A node has been added as a child of another node (use mutation observers instead). DOMNodeInsertedIntoDocument MutationEvent DOM L3 A node has been inserted into the document (use mutation observers instead). DOMNodeRemoved MutationEvent DOM L3 A node has been removed from its parent node (use mutation observers instead). DOMNodeRemovedFromDocument MutationEvent DOM L3 A node has been removed from the document (use mutation observers instead). DOMSubtreeModified MutationEvent DOM L3 A change happened in the document (use mutation observers instead). drag DragEvent HTML5 An element or text selection is being dragged (every 350ms). dragend DragEvent HTML5 A drag operation is being ended (by releasing a mouse button or hitting the escape key). dragenter DragEvent HTML5 A dragged element or text selection enters a valid drop target. dragleave DragEvent HTML5 A dragged element or text selection leaves a valid drop target. dragover DragEvent HTML5 An element or text selection is being dragged over a valid drop target (every 350ms). dragstart DragEvent HTML5 The user starts dragging an element or text selection. drop DragEvent HTML5 An element is dropped on a valid drop target. durationchange Event HTML5 media The duration attribute has been updated. emptied Event HTML5 media The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it. end Event Web Speech API The speech recognition service has disconnected. end SpeechSynthesisEvent Web Speech API The utterance has finished being spoken. ended Event HTML5 media Playback has stopped because the end of the media was reached. ended Event Web Audio API Playback has stopped because the end of the media was reached. endEvent TimeEvent SVG A SMIL animation element ends. error UIEvent DOM L3 A resource failed to load. error ProgressEvent Progress and XMLHttpRequest Progression has failed. error Event WebSocket A WebSocket connection has been closed with prejudice (some data couldn’t be sent for example). error Event Server Sent Events An event source connection has been failed. error Event IndexedDB A request caused an error and failed. error Event Web Speech API A speech recognition error occurs. error SpeechSynthesisErrorEvent Web Speech API An error occurs that prevents the utterance from being successfully spoken. focus FocusEvent DOM L3 An element has received focus (does not bubble). focusin FocusEvent DOM L3 An element is about to receive focus (bubbles). focusout FocusEvent DOM L3 An element is about to lose focus (bubbles). fullscreenchange Event Full Screen An element was turned to fullscreen mode or back to normal mode. fullscreenerror Event Full Screen It was impossible to switch to fullscreen mode for technical reasons or because the permission was denied. gamepadconnected GamepadEvent Gamepad A gamepad has been connected. gamepaddisconnected GamepadEvent Gamepad A gamepad has been disconnected. gotpointercapture PointerEvent Pointer Events Element receives pointer capture. hashchange HashChangeEvent HTML5 The fragment identifier of the URL has changed (the part of the URL after the #). lostpointercapture PointerEvent Pointer Events Element lost pointer capture. input Event HTML5 The value of an element changes or the content of an element with the attribute contenteditable is modified. invalid Event HTML5 A submittable element has been checked and doesn’t satisfy its constraints. keydown KeyboardEvent DOM L3 A key is pressed down. keypress KeyboardEvent DOM L3 A key is pressed down and that key normally produces a character value (use input instead). keyup KeyboardEvent DOM L3 A key is released. languagechange Event HTML 5.1 NavigatorLanguage.languages The user’s preferred languages have changed. levelchange Event Battery status The level attribute has been updated. load UIEvent DOM L3 A resource and its dependent resources have finished loading. load ProgressEvent Progress and XMLHttpRequest Progression has been successful. loadeddata Event HTML5 media The first frame of the media has finished loading. loadedmetadata Event HTML5 media The metadata has been loaded. loadend ProgressEvent Progress and XMLHttpRequest Progress has stopped (after “error”, “abort” or “load” have been dispatched). loadstart ProgressEvent Progress and XMLHttpRequest Progress has begun. mark SpeechSynthesisEvent Web Speech API The spoken utterance reaches a named SSML “mark” tag. message MessageEvent WebSocket A message is received through a WebSocket. message MessageEvent Web Workers A message is received from a Web Worker. message MessageEvent Web Messaging A message is received from a child (i)frame or a parent window. message MessageEvent Server Sent Events A message is received through an event source. messageerror MessageEvent MessagePort, Web Workers, Broadcast Channel, Window A message error is raised when a message is received by an object. message ServiceWorkerMessageEvent or ExtendableMessageEvent, depending on context. Service Workers A message is received from a service worker, or a message is received in a service worker from another context. mousedown MouseEvent DOM L3 A pointing device button (usually a mouse) is pressed on an element. mouseenter MouseEvent DOM L3 A pointing device is moved onto the element that has the listener attached. mouseleave MouseEvent DOM L3 A pointing device is moved off the element that has the listener attached. mousemove MouseEvent DOM L3 A pointing device is moved over an element. mouseout MouseEvent DOM L3 A pointing device is moved off the element that has the listener attached or off one of its children. mouseover MouseEvent DOM L3 A pointing device is moved onto the element that has the listener attached or onto one of its children. mouseup MouseEvent DOM L3 A pointing device button is released over an element. nomatch SpeechRecognitionEvent Web Speech API The speech recognition service returns a final result with no significant recognition. notificationclick NotificationEvent Notifications API onnotificationclick A system notification spawned by ServiceWorkerRegistration.showNotification() has been clicked. offline Event HTML5 offline The browser has lost access to the network. online Event HTML5 offline The browser has gained access to the network (but particular websites might be unreachable). open Event WebSocket A WebSocket connection has been established. open Event Server Sent Events An event source connection has been established. orientationchange Event Screen Orientation The orientation of the device (portrait/landscape) has changed pagehide PageTransitionEvent HTML5 A session history entry is being traversed from. pageshow PageTransitionEvent HTML5 A session history entry is being traversed to. paste ClipboardEvent Clipboard Data has been transferred from the system clipboard to the document. pause Event HTML5 media Playback has been paused. pause SpeechSynthesisEvent Web Speech API The utterance is paused part way through. pointercancel PointerEvent Pointer Events The pointer is unlikely to produce any more events. pointerdown PointerEvent Pointer Events The pointer enters the active buttons state. pointerenter PointerEvent Pointer Events Pointing device is moved inside the hit-testing boundary. pointerleave PointerEvent Pointer Events Pointing device is moved out of the hit-testing boundary. pointerlockchange Event Pointer Lock The pointer was locked or released. pointerlockerror Event Pointer Lock It was impossible to lock the pointer for technical reasons or because the permission was denied. pointermove PointerEvent Pointer Events The pointer changed coordinates. pointerout PointerEvent Pointer Events The pointing device moved out of hit-testing boundary or leaves detectable hover range. pointerover PointerEvent Pointer Events The pointing device is moved into the hit-testing boundary. pointerup PointerEvent Pointer Events The pointer leaves the active buttons state. play Event HTML5 media Playback has begun. playing Event HTML5 media Playback is ready to start after having been paused or delayed due to lack of data. popstate PopStateEvent HTML5 A session history entry is being navigated to (in certain cases). progress ProgressEvent Progress and XMLHttpRequest In progress. push PushEvent Push API A Service Worker has received a push message. pushsubscriptionchange PushEvent Push API A PushSubscription has expired. ratechange Event HTML5 media The playback rate has changed. readystatechange Event HTML5 and XMLHttpRequest The readyState attribute of a document has changed. repeatEvent TimeEvent SVG A SMIL animation element is repeated. reset Event DOM L2, HTML5 A form is reset. resize UIEvent DOM L3 The document view has been resized. resourcetimingbufferfull Performance Resource Timing The browser’s resource timing buffer is full. result SpeechRecognitionEvent Web Speech API The speech recognition service returns a result — a word or phrase has been positively recognized and this has been communicated back to the app. resume SpeechSynthesisEvent Web Speech API A paused utterance is resumed. scroll UIEvent DOM L3 The document view or an element has been scrolled. seeked Event HTML5 media A seek operation completed. seeking Event HTML5 media A seek operation began. select UIEvent DOM L3 Some text is being selected. selectstart Event Selection API A selection just started. selectionchange Event Selection API The selection in the document has been changed. show MouseEvent HTML5 A contextmenu event was fired on/bubbled to an element that has a contextmenu attribute slotchange Event DOM The node contents of a HTMLSlotElement (``) have changed. soundend Event Web Speech API Any sound — recognisable speech or not — has stopped being detected. soundstart Event Web Speech API Any sound — recognisable speech or not — has been detected. speechend Event Web Speech API Speech recognised by the speech recognition service has stopped being detected. speechstart Event Web Speech API Sound that is recognised by the speech recognition service as speech has been detected. stalled Event HTML5 media The user agent is trying to fetch media data, but data is unexpectedly not forthcoming. start Event Web Speech API The speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current SpeechRecognition. start SpeechSynthesisEvent Web Speech API The utterance has begun to be spoken. storage StorageEvent Web Storage A storage area (localStorage or sessionStorage) has changed. submit Event DOM L2, HTML5 A form is submitted. success Event IndexedDB A request successfully completed. suspend Event HTML5 media Media data loading has been suspended. SVGAbort SVGEvent SVG Page loading has been stopped before the SVG was loaded. SVGError SVGEvent SVG An error has occurred before the SVG was loaded. SVGLoad SVGEvent SVG An SVG document has been loaded and parsed. SVGResize SVGEvent SVG An SVG document is being resized. SVGScroll SVGEvent SVG An SVG document is being scrolled. SVGUnload SVGEvent SVG An SVG document has been removed from a window or frame. SVGZoom SVGZoomEvent SVG An SVG document is being zoomed. timeout ProgressEvent XMLHttpRequest timeupdate Event HTML5 media The time indicated by the currentTime attribute has been updated. touchcancel TouchEvent Touch Events A touch point has been disrupted in an implementation-specific manners (too many touch points for example). touchend TouchEvent Touch Events A touch point is removed from the touch surface. touchmove TouchEvent Touch Events A touch point is moved along the touch surface. touchstart TouchEvent Touch Events A touch point is placed on the touch surface. transitionend TransitionEvent CSS Transitions A CSS transition has completed. unload UIEvent DOM L3 The document or a dependent resource is being unloaded. upgradeneeded IndexedDB An attempt was made to open a database with a version number higher than its current version. A versionchange transaction has been created. userproximity UserProximityEvent Proximity Sensor Fresh data is available from a proximity sensor (indicates whether the nearby object is near the device or not). voiceschanged Event Web Speech API The list of SpeechSynthesisVoice objects that would be returned by the SpeechSynthesis.getVoices() method has changed (when the voiceschanged event fires.) versionchange IndexedDB A versionchange transaction completed. visibilitychange Event Page visibility The content of a tab has become visible or has been hidden. volumechange Event HTML5 media The volume has changed. waiting Event HTML5 media Playback has stopped because of a temporary lack of data. wheel WheelEvent DOM L3 A wheel button of a pointing device is rotated in any direction. 非标准事件 Event Name Event Type Specification Fired when… afterscriptexecute Event Mozilla Specific A script has been executed. beforescriptexecute Event Mozilla Specific A script is about to be executed. beforeinstallprompt Event Chrome specific A user is prompted to save a web site to a home screen on mobile. cardstatechange Firefox OS specific The MozMobileConnection.cardState property changes value. change DeviceStorageChangeEvent Firefox OS specific This event is triggered each time a file is created, modified or deleted on a given storage area. connectionInfoUpdate Firefox OS specific The informations about the signal strength and the link speed have been updated. cfstatechange Firefox OS specific The call forwarding state changes. datachange Firefox OS specific The MozMobileConnection.data object changes values. dataerror Firefox OS specific The MozMobileConnection.data object receive an error from the RIL. DOMMouseScroll Mozilla specific The wheel button of a pointing device is rotated (detail attribute is a number of lines). (use wheel instead) dragdrop DragEvent Mozilla specific An element is dropped (use drop instead). dragexit DragEvent Mozilla specific A drag operation is being ended(use dragend instead). draggesture DragEvent Mozilla specific The user starts dragging an element or text selection (use dragstart instead). icccardlockerror Firefox OS specific the MozMobileConnection.unlockCardLock() or MozMobileConnection.setCardLock() methods fails. iccinfochange Firefox OS specific The MozMobileConnection.iccInfo object changes. localized Mozilla Specific The page has been localized using data-l10n-* attributes. mousewheel IE invented The wheel button of a pointing device is rotated. MozAudioAvailable Event Mozilla specific The audio buffer is full and the corresponding raw samples are available. MozBeforeResize Mozilla specific A window is about to be resized. mozbrowseractivitydone Firefox OS Browser API-specific Sent when some activity has been completed (complete description TBD.) mozbrowserasyncscroll Firefox OS Browser API-specific Sent when the scroll position within a browser `` changes. mozbrowseraudioplaybackchange Firefox OS Browser API-specific Sent when audio starts or stops playing within the browser `` content. mozbrowsercaretstatechanged Firefox OS Browser API-specific Sent when the text selected inside the browser `` content changes. mozbrowserclose Firefox OS Browser API-specific Sent when window.close() is called within a browser ``. mozbrowsercontextmenu Firefox OS Browser API-specific Sent when a browser `` try to open a context menu. mozbrowserdocumentfirstpaint Firefox OS Browser API-specific Sent when a new paint occurs on any document in the browser ``. mozbrowsererror Firefox OS Browser API-specific Sent when an error occured while trying to load a content within a browser iframe mozbrowserfindchange Firefox OS Browser API-specific Sent when a search operation is performed on the browser `` content (see HTMLIFrameElement search methods.) mozbrowserfirstpaint Firefox OS Browser API-specific Sent when the `` paints content for the first time (this doesn’t include the initial paint from about:blank.) mozbrowsericonchange Firefox OS Browser API-specific Sent when the favicon of a browser iframe changes. mozbrowserlocationchange Firefox OS Browser API-specific Sent when an browser iframe’s location changes. mozbrowserloadend Firefox OS Browser API-specific Sent when the browser iframe has finished loading all its assets. mozbrowserloadstart Firefox OS Browser API-specific Sent when the browser iframe starts to load a new page. mozbrowsermanifestchange Firefox OS Browser API-specific Sent when a the path to the app manifest changes, in the case of a browser `` with an open web app embedded in it. mozbrowsermetachange Firefox OS Browser API-specific Sent when a `` elelment is added to, removed from or changed in the browser ``‘s content. mozbrowseropensearch Firefox OS Browser API-specific Sent when a link to a search engine is found. mozbrowseropentab Firefox OS Browser API-specific Sent when a new tab is opened within a browser `` as a result of the user issuing a command to open a link target in a new tab (for example ctrl/cmd + click.) mozbrowseropenwindow Firefox OS Browser API-specific Sent when window.open() is called within a browser iframe. mozbrowserresize Firefox OS Browser API-specific Sent when the browser ``‘s window size has changed. mozbrowserscroll Firefox OS Browser API-specific Sent when the browser `` content scrolls. mozbrowserscrollareachanged Firefox OS Browser API-specific Sent when the available scrolling area in the browser `` changes. This can occur on resize and when the page size changes (while loading for example.) mozbrowserscrollviewchange Firefox OS Browser API-specific Sent when asynchronous scrolling (i.e. APCZ) starts or stops. mozbrowsersecuritychange Firefox OS Browser API-specific Sent when the SSL state changes within a browser iframe. mozbrowserselectionstatechanged Firefox OS Browser API-specific Sent when the text selected inside the browser `` content changes. Note that this is deprecated, and newer implementations use mozbrowsercaretstatechanged instead. mozbrowsershowmodalprompt Firefox OS Browser API-specific Sent when alert(), confirm() or prompt() are called within a browser iframe mozbrowsertitlechange Firefox OS Browser API-specific Sent when the document.title changes within a browser iframe. mozbrowserusernameandpasswordrequired Firefox OS Browser API-specific Sent when an HTTP authentification is requested. mozbrowservisibilitychange Firefox OS Browser API-specific Sent when the visibility state of the current browser iframe `` changes, for example due to a call to setVisible(). MozGamepadButtonDown To be specified A gamepad button is pressed down. MozGamepadButtonUp To be specified A gamepad button is released. MozMousePixelScroll Mozilla specific The wheel button of a pointing device is rotated (detail attribute is a number of pixels). (use wheel instead) MozOrientation Mozilla specific Fresh data is available from an orientation sensor (see deviceorientation). MozScrolledAreaChanged UIEvent Mozilla specific The document view has been scrolled or resized. moztimechange Mozilla specific The time of the device has been changed. MozTouchDown Mozilla specific A touch point is placed on the touch surface (use touchstart instead). MozTouchMove Mozilla specific A touch point is moved along the touch surface (use touchmove instead). MozTouchUp Mozilla specific A touch point is removed from the touch surface (use touchend instead). alerting CallEvent To be specified The correspondent is being alerted (his/her phone is ringing). busy CallEvent To be specified The line of the correspondent is busy. callschanged CallEvent To be specified A call has been added or removed from the list of current calls. onconnected connected CallEvent To be specified A call has been connected. connecting CallEvent To be specified A call is about to connect. delivered SMSEvent To be specified An SMS has been successfully delivered. dialing CallEvent To be specified The number of a correspondent has been dialed. disabled Firefox OS specific Wifi has been disabled on the device. disconnected CallEvent To be specified A call has been disconnected. disconnecting CallEvent To be specified A call is about to disconnect. enabled Firefox OS specific Wifi has been enabled on the device. error CallEvent To be specified An error occurred. held CallEvent To be specified A call has been held. holding CallEvent To be specified A call is about to be held. incoming CallEvent To be specified A call is being received. received SMSEvent To be specified An SMS has been received. resuming CallEvent To be specified A call is about to resume. sent SMSEvent To be specified An SMS has been sent. statechange CallEvent To be specified The state of a call has changed. statuschange Firefox OS specific The status of the Wifi connection changed. overflow UIEvent Mozilla specific An element has been overflowed by its content or has been rendered for the first time in this state (only works for elements styled with overflow != visible). smartcard-insert Mozilla specific A smartcard has been inserted. smartcard-remove Mozilla specific A smartcard has been removed. stkcommand Firefox OS specific The STK Proactive Command is issued from ICC. stksessionend Firefox OS specific The STK Session is terminated by ICC. touchenter TouchEvent Touch Events Removed touchleave TouchEvent Touch Events Removed underflow UIEvent Mozilla specific An element is no longer overflowed by its content (only works for elements styled with overflow != visible). uploadprogress ProgressEvent Mozilla Specific Upload is in progress (see progress). ussdreceived Firefox OS specific A new USSD message is received voicechange Firefox OS specific The MozMobileConnection.voice object changes values. msContentZoom Microsoft specific MSManipulationStateChanged Microsoft specific MSPointerHover Microsoft specific Mozilla 特定事件注意：这些事件不会暴露给 Web 内容使用，只能在 chrome 内容的上下文中使用。 XUL 事件 Event Name Event Type Specification Fired when… broadcast XUL An observer noticed a change to the attributes of a watched broadcaster. CheckboxStateChange XUL The state of a checkbox has been changed either by a user action or by a script (useful for accessibility). close XUL The close button of the window has been clicked. command XUL An element has been activated. commandupdate XUL A command update occurred on a commandset element. DOMMenuItemActive XUL A menu or menuitem has been hovered or highlighted. DOMMenuItemInactive XUL A menu or menuitem is no longer hovered or highlighted. popuphidden PopupEvent XUL A menupopup, panel or tooltip has been hidden. popuphiding PopupEvent XUL A menupopup, panel or tooltip is about to be hidden. popupshowing PopupEvent XUL A menupopup, panel or tooltip is about to become visible. popupshown PopupEvent XUL A menupopup, panel or tooltip has become visible. RadioStateChange XUL The state of a radio has been changed either by a user action or by a script (useful for accessibility). ValueChange XUL The value of an element has changed (a progress bar for example, useful for accessibility). 附加组件特定事件 Event Name Event Type Specification Fired when… MozSwipeGesture Addons specific A touch point is swiped across the touch surface MozMagnifyGestureStart Addons specific Two touch points start to move away from each other. MozMagnifyGestureUpdate Addons specific Two touch points move away from each other (after a MozMagnifyGestureStart). MozMagnifyGesture Addons specific Two touch points moved away from each other (after a sequence of MozMagnifyGestureUpdate). MozRotateGestureStart Addons specific Two touch points start to rotate around a point. MozRotateGestureUpdate Addons specific Two touch points rotate around a point (after a MozRotateGestureStart). MozRotateGesture Addons specific Two touch points rotate around a point (after a sequence of MozRotateGestureUpdate). MozTapGesture Addons specific Two touch points are tapped on the touch surface. MozPressTapGesture Addons specific A “press-tap” gesture happened on the touch surface (first finger down, second finger down, second finger up, first finger up). MozEdgeUIGesture Addons specific A touch point is swiped across the touch surface to invoke the edge UI (Win8 only). MozAfterPaint Addons specific Content has been repainted. DOMPopupBlocked Addons specific A popup has been blocked DOMWindowCreated Addons specific A window has been created. DOMWindowClose Addons specific A window is about to be closed. DOMTitleChanged Addons specifc The title of a window has changed. DOMLinkAdded Addons specifc A link has been added a document. DOMLinkRemoved Addons specifc A link has been removed inside from a document. DOMMetaAdded Addons specific A meta element has been added to a document. DOMMetaRemoved Addons specific A meta element has been removed from a document. DOMWillOpenModalDialog Addons specific A modal dialog is about to open. DOMModalDialogClosed Addons specific A modal dialog has been closed. DOMAutoComplete Addons specific The content of an element has been auto-completed. DOMFrameContentLoaded Addons specific The frame has finished loading (but not its dependent resources). AlertActive Addons specific A notification element is shown. AlertClose Addons specific A notification element is closed. fullscreen Addons specific Browser fullscreen mode has been entered or left. sizemodechange Addons specific Window has entered/left fullscreen mode, or has been minimized/unminimized. MozEnteredDomFullscreen Addons specific DOM fullscreen mode has been entered. SSWindowClosing Addons specific The session store will stop tracking this window. SSTabClosing Addons specific The session store will stop tracking this tab. SSTabRestoring Addons specific A tab is about to be restored. SSTabRestored Addons specific A tab has been restored. SSWindowStateReady Addons specific A window state has switched to “ready”. SSWindowStateBusy Addons specific A window state has switched to “busy”. TabOpen Addons specific A tab has been opened. TabClose Addons specific A tab has been closed. TabSelect Addons specific A tab has been selected. TabShow Addons specific A tab has been shown. TabHide Addons specific A tab has been hidden. TabPinned Addons specific A tab has been pinned. TabUnpinned Addons specific A tab has been unpinned. 开发者工具特定事件 Event Name Event Type Specification Fired when… CssRuleViewRefreshed devtools specific The “Rules” view of the style inspector has been updated. CssRuleViewChanged devtools specific The “Rules” view of the style inspector has been changed. CssRuleViewCSSLinkClicked devtools specific A link to a CSS file has been clicked in the “Rules” view of the style inspector. 转载自：vue中v-on支持的事件总结 - torchstar - 博客园 (cnblogs.com)","link":"/%5Bobject%20Object%5D/Vue%E4%B8%ADv-on%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BB%93/"},{"title":"Vue两组间通过传值设置另一个组件背景","text":"vue项目中，从一个组件获取图片url，并为另一个组件设置该图片为背景的盒子子组件123456789101112&lt;template&gt; &lt;div class=&quot;intd_content_banner&quot; :style=&quot;{background:'url('+banner.url+')'}&quot;&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; export default { props:['banner'], name: &quot;Banner&quot;, }&lt;/script&gt; 父组件123456789101112131415161718192021&lt;template&gt; &lt;div id=&quot;intro&quot;&gt; &lt;Banner :banner=&quot;banner&quot;&gt;&lt;/Banner&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; import Banner from &quot;./common/Banner&quot;; export default { name: &quot;Intro&quot;, data(){ return{ banner:{ title:'博音简介', url:'https://liangcheng-law.oss-cn-beijing.aliyuncs.com/static/images/lawyer_banner.jpg', } } }, components: {Banner} }&lt;/script&gt; 最近在做vue项目时遇到的小问题，特此记录，下次遇到可以更好解决。（一）","link":"/%5Bobject%20Object%5D/Vue%E4%B8%A4%E7%BB%84%E9%97%B4%E9%80%9A%E8%BF%87%E4%BC%A0%E5%80%BC%E8%AE%BE%E7%BD%AE%E5%8F%A6%E4%B8%80%E4%B8%AA%E7%BB%84%E4%BB%B6%E8%83%8C%E6%99%AF/"},{"title":"JsQuestions-1","text":"123456// 输出什么？const myFunc = ({ x, y, z }) =&gt; { console.log(x, y, z);};myFunc(1, 2, 3); A: 1 2 3 B: {1: 1} {2: 2} {3: 3} C: { 1: undefined } undefined undefined D: undefined undefined undefined 解析：答案: DmyFunc 期望接收一个包含 x, y 和 z 属性的对象作为它的参数。因为我们仅仅传递三个单独的数字值 (1, 2, 3) 而不是一个含有 x, y 和 z 属性的对象 ({x: 1, y: 2, z: 3})， x, y 和 z 有着各自的默认值 undefined. -来源：Github - Javascript Questions","link":"/%5Bobject%20Object%5D/JsQuestions-1/"},{"title":"Git学习Ⅱ","text":"10.alias命令别名提高操作效率使用alias重新定西提交 12345[alias] a = add . c = commit l = log s = status 11.git分支branch存在的意义Git分支是由指针管理起来的，所以创建、切换、合并、删除分支都非常快，非常适合大型项目的开发。 在分支上做开发，调试好了后再合并到主分支。那么每个人开发模块式都不会影响到别人。 12.实例讲解分支branch基本操作$ git branch xxx 创建分支 $ git checkout xxx 切换分支 $ git branch 查看分支 $ git checkout -b xxx 创建并切换分支 创建新功能要创建并切换到新的分支，不污染主分支 13.分支的合并$ git master xxx 合并分支 $ git branch -d xxx 删除分支 14.分支管理 –merged 和 –no-merged 及分支强制删除操作 $ git branch –merged 查看合并分支 $ git branch –no-merged 查看未合并分支 $ git branch -d xxx 删除分支 $ git branch -D xxx 强制删除分支 15.标准的分支操作工作流 16.stash临时储存区实例讲解当需要跳到其他分支去完成任务时，如果当前文件不需要提交，可以将当前文件放入暂存区 1$ git stash 1$ git stash list 查看暂存区文件 1$ git stash pop 删除暂存区 1$ git stash apply stash@{1} 恢复第一个文件，切换某一个文件存储状态 17.git的Tag标签稳定版 1$ git tag 查看标签 1$ git tag v1.0 打标签 18.生成zip代码压缩包1$ git archive master --prefix='lyh' --form=zip &gt; xxx.zip 创建压缩包 19.使用系统别名定义git全局指令1alias gs=&quot;git status&quot;alias gc=&quot;git commit -m&quot;alias gl=&quot;git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit &quot;alias gb=&quot;git branch&quot;alias gb=&quot;git branch&quot;alias ga=&quot;git add&quot;alias go=&quot;git checkout&quot;","link":"/%5Bobject%20Object%5D/Git%E5%AD%A6%E4%B9%A0%E2%85%A1/"},{"title":"Git学习Ⅰ","text":"Git学习Ⅰ1.配置作者信息1$ mkdir git 创建文件夹 1$ ll 显示 目录列表 1$ pwd 看当前在那个文件夹 1$ cd 会文件夹目录 1$ cd ..后退 1$ ls -a 看见隐藏文件 1$ git config --global user.email &quot;xxx@xxx.com&quot; 1$ git config --global user.name &quot;xxx&quot; 1$ rm -rm 删除文件夹 1$ git clone https://github.com/xxx/xxx.git 克隆存在的项目 2.流水线操作 3.使用命令完成流水操作1$ touch xxx.txt 创建文件 1$ git add xxx.txt 将文件放入小推车（暂存） 1$ git status 查看库的文件状态 1$ git add .传入所有文件 1$ git commit -m 'xxx' 向git库传入文件并说明 4.gitignore详解控制版本库文件管理在gitignore中控制上传文件（.gitignore中是忽略文件） 1$ git .gitignore 5.从版本库中删除资源1$ git rm file 删除库中及本第文件 1$ git rm --cached file 仅仅删除本地文件 6.版本库中修改资料名称1$ git mv xxx.txt changeName.txt 修改名字 1$ git commit -m 'add file' 上传暂存区的文件 1$ git mv indexController.txt IndexController.txt 已存在文件的名字修改 在文件夹中修改名称也需要重新提交 07.使用log日志查看历史记录1$ git log -p 显示文件变动 1$ git log --name-only 只显示名字 1$ git log -p -1 显示行数 08.使用amend修改最新一次提交事件1$ git commit --amend 进入vim界面修改日志信息 i：insert 插入信息 esc：退出插入 :wq：保存编辑并推出Vim 9.管理暂存区中的文件1$ git rm --cached xxx.txt 文件没有提交 从暂存区撤回 1$ git reset xxx.txt 文件已经提交 从暂存区撤销 1$ git checkout -- xxx.txt 返回上一次修改内容 回到最初状态 1$ cat xxx.txt 查看文件内容","link":"/%5Bobject%20Object%5D/Git%E5%AD%A6%E4%B9%A0%E2%85%A0/"},{"title":"html5中的session storage和local storage","text":"随着互联网的快速发展,基于网页的应用越来越普遍,同时也变的越来越复杂,为了满足各种各样的需求,会经常性在本地存储大量的数据, HTML5规范提出了相关解决方案。 本地存储特性 1、数据存储在用户浏览器中 2、设置、读取方便、甚至页面刷新不失数据 3、容量较大, 储存大小约为5MB 4、只能存储字符串,可以将对象JSON.stringifyO编码后存储 先说一下sessionStorage和localStorage两者的区别 前者是一个前端概念，可以将一部分数据在当前会话中保存下来，刷新页面数据依然存在，但关闭页面或者浏览器后数据会被清空。 后者本地存储除非被手动清除否则永久保存 这两者也有相同点，它们存放的数据大小一般为5MB且都是仅在客户端（即浏览器）中保存，不参与和服务器的通信 window.sessionStorage 1.生命周期为关闭浏览器窗口 2.在同一个窗口（页面）下数据可以共享 3.以键值对的形式储存使用 存储数据：window.sessionStorage（key，value） 保存数据语法： 1sessionStorage.setItem(&quot;key&quot;, &quot;value&quot;); 读取数据语法： 1var lastname = sessionStorage.getItem(&quot;key&quot;); 删除指定键的数据语法： 1sessionStorage.removeItem(&quot;key&quot;); 删除所有数据： 1sessionStorage.clear(); window.localStorage 1.生命周期永久生效,除非手动删除否则关闭页面也会存在 2、可以多窗口(同一浏览器可以共享) 3.以键值对的形式存储使用 保存数据语法： 1localStorage.setItem(&quot;key&quot;, &quot;value&quot;); 读取数据语法： 1var lastname = localStorage.getItem(&quot;key&quot;); 删除数据语法： 1localStorage.removeItem(&quot;key&quot;);","link":"/%5Bobject%20Object%5D/html5%E4%B8%AD%E7%9A%84session%20storage%E5%92%8Clocal%20storage/"},{"title":"CSS 之 border-radius","text":"border-radius - 指定每个圆角 如果你在 border-radius 属性中只指定一个值，那么将生成 4 个 圆角。 但是，如果你要在四个角上一一指定，可以使用以下规则： 四个值: 第一个值为左上角，第二个值为右上角，第三个值为右下角，第四个值为左下角。 三个值: 第一个值为左上角, 第二个值为右上角和左下角，第三个值为右下角 两个值: 第一个值为左上角与右下角，第二个值为右上角与左下角 一个值： 四个圆角值相同 border-radius 所有四个边角 border-*-*-radius 属性的缩写 border-top-left-radius 定义了左上角的弧度 border-top-right-radius 定义了右上角的弧度 border-bottom-right-radius 定义了右下角的弧度 border-bottom-left-radius 定义了左下角的弧度 其中该属性的数值可以是百分比，也可以是其他单位例如像素","link":"/%5Bobject%20Object%5D/Css-%E4%B9%8B-border-radius/"}],"tags":[{"name":"ajax","slug":"ajax","link":"/tags/ajax/"},{"name":"css-border","slug":"css-border","link":"/tags/css-border/"},{"name":"git学习","slug":"git学习","link":"/tags/git%E5%AD%A6%E4%B9%A0/"},{"name":"Js-Questions","slug":"Js-Questions","link":"/tags/Js-Questions/"},{"name":"JavaScript方法","slug":"JavaScript方法","link":"/tags/JavaScript%E6%96%B9%E6%B3%95/"},{"name":"vue","slug":"vue","link":"/tags/vue/"},{"name":"问题解决","slug":"问题解决","link":"/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"},{"name":"随笔","slug":"随笔","link":"/tags/%E9%9A%8F%E7%AC%94/"},{"name":"优秀博文转载","slug":"优秀博文转载","link":"/tags/%E4%BC%98%E7%A7%80%E5%8D%9A%E6%96%87%E8%BD%AC%E8%BD%BD/"},{"name":"local storage","slug":"local-storage","link":"/tags/local-storage/"},{"name":"session storage","slug":"session-storage","link":"/tags/session-storage/"},{"name":"Express","slug":"Express","link":"/tags/Express/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"浅拷贝与深拷贝","slug":"浅拷贝与深拷贝","link":"/tags/%E6%B5%85%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B7%B1%E6%8B%B7%E8%B4%9D/"},{"name":"call()&apply()&bind()","slug":"call-apply-bind","link":"/tags/call-apply-bind/"},{"name":"函数封装","slug":"函数封装","link":"/tags/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/"},{"name":"递归","slug":"递归","link":"/tags/%E9%80%92%E5%BD%92/"},{"name":"链表","slug":"链表","link":"/tags/%E9%93%BE%E8%A1%A8/"}],"categories":[{"name":"Ajax","slug":"Ajax","link":"/categories/Ajax/"},{"name":"CSS","slug":"CSS","link":"/categories/CSS/"},{"name":"Git","slug":"Git","link":"/categories/Git/"},{"name":"JavaScript","slug":"JavaScript","link":"/categories/JavaScript/"},{"name":"Vue","slug":"Vue","link":"/categories/Vue/"},{"name":"html5","slug":"html5","link":"/categories/html5/"},{"name":"后端篇","slug":"后端篇","link":"/categories/%E5%90%8E%E7%AB%AF%E7%AF%87/"},{"name":"函数封装","slug":"函数封装","link":"/categories/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/"},{"name":"Leetcode","slug":"Leetcode","link":"/categories/Leetcode/"}]}